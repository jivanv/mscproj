#include "Nanosat1-model.nddl"

// Create a planner configuration instance in PLASMA.

// Setting up the nanosatellite with battery
Battery battery = new Battery(30000, 0, 30000);
Memory memory = new Memory(0, 0, 4194304);
Nanosatellite nanosat = new Nanosatellite(battery, memory);

// Close the the PLASMA Database - no more objects can be created.
close();

// Establish the initial conditions
fact(nanosat.c3d.state.Off cOff);
cOff.start = 0;
fact(nanosat.topcat.state.Off tOff);
tOff.start = 0;
fact(nanosat.mic.state.Off mOff);
mOff.start = 0;
fact(nanosat.janus.state.Off jOff);
jOff.start = 0;
fact(nanosat.constantpayloads.state.On cpOn);
cpOn.start = 0;

// Establish the windows of availability
fact(nanosat.timeHorizon.Available horizon);
horizon.start = 0;
horizon.end = 1500;

fact(nanosat.sunlight.Available sunlightWindow1);
fact(nanosat.sunlight.Available sunlightWindow2);
fact(nanosat.sunlight.Available sunlightWindow3);
fact(nanosat.sunlight.Available sunlightWindow4);
fact(nanosat.sunlight.Available sunlightWindow5);
fact(nanosat.sunlight.Available sunlightWindow6);
fact(nanosat.sunlight.Available sunlightWindow7);
fact(nanosat.sunlight.Available sunlightWindow8);
fact(nanosat.sunlight.Available sunlightWindow9);
fact(nanosat.sunlight.Available sunlightWindow10);
fact(nanosat.sunlight.Available sunlightWindow11);
fact(nanosat.sunlight.Available sunlightWindow12);
fact(nanosat.sunlight.Available sunlightWindow13);
fact(nanosat.sunlight.Available sunlightWindow14);
fact(nanosat.sunlight.Available sunlightWindow15);
sunlightWindow1.start = 30;
sunlightWindow1.end = 77;
sunlightWindow2.start = 127;
sunlightWindow2.end = 174;
sunlightWindow3.start = 224;
sunlightWindow3.end = 271;
sunlightWindow4.start = 322;
sunlightWindow4.end = 368;
sunlightWindow5.start = 419;
sunlightWindow5.end = 465;
sunlightWindow6.start = 516;
sunlightWindow6.end = 562;
sunlightWindow7.start = 613;
sunlightWindow7.end = 659;
sunlightWindow8.start = 709;
sunlightWindow8.end = 757;
sunlightWindow9.start = 807;
sunlightWindow9.end = 854;
sunlightWindow10.start = 904;
sunlightWindow10.end = 951;
sunlightWindow11.start = 1001;
sunlightWindow11.end = 1048;
sunlightWindow12.start = 1098;
sunlightWindow12.end = 1145;
sunlightWindow13.start = 1196;
sunlightWindow13.end = 1242;
sunlightWindow14.start = 1293;
sunlightWindow14.end = 1339;
sunlightWindow15.start = 1390;
sunlightWindow15.end = 1440;

fact(nanosat.localSunlight.Available localDaylight);
localDaylight.start = 286;
localDaylight.end = 1309;

fact(nanosat.saa.Available SAA1);
fact(nanosat.saa.Available SAA2);
fact(nanosat.saa.Available SAA3);
fact(nanosat.saa.Available SAA4);
fact(nanosat.saa.Available SAA5);
fact(nanosat.saa.Available SAA6);
fact(nanosat.saa.Available SAA7);
SAA1.start = 77;
SAA1.end = 87;
SAA2.start = 173;
SAA2.end = 183;
SAA3.start = 632;
SAA3.end = 638;
SAA4.start = 728;
SAA4.end = 736;
SAA5.start = 823;
SAA5.end = 834;
SAA6.start = 923;
SAA6.end = 926;
SAA7.start = 1433;
SAA7.end = 1444;

fact(nanosat.stx.window.Available downlinkWindowCapeTown1);
fact(nanosat.stx.window.Available downlinkWindowCapeTown2);
fact(nanosat.stx.window.Available downlinkWindowCapeTown3);
fact(nanosat.stx.window.Available downlinkWindowCapeTown4);
downlinkWindowCapeTown1.start = 533;
downlinkWindowCapeTown1.end = 544;
downlinkWindowCapeTown2.start = 627;
downlinkWindowCapeTown2.end = 640;
downlinkWindowCapeTown3.start = 1338;
downlinkWindowCapeTown3.end = 1351;
downlinkWindowCapeTown4.start = 1434;
downlinkWindowCapeTown4.end = 1446;

fact(nanosat.uvtrx.downlink.window.Available downlinkWindowUK1);
fact(nanosat.uvtrx.downlink.window.Available downlinkWindowUK2);
fact(nanosat.uvtrx.downlink.window.Available downlinkWindowUK3);
fact(nanosat.uvtrx.downlink.window.Available downlinkWindowUK4);
fact(nanosat.uvtrx.downlink.window.Available downlinkWindowUK5);
downlinkWindowUK1.start = 2;
downlinkWindowUK1.end = 14;
downlinkWindowUK2.start = 701;
downlinkWindowUK2.end = 713;
downlinkWindowUK3.start = 797;
downlinkWindowUK3.end = 809;
downlinkWindowUK4.start = 894;
downlinkWindowUK4.end = 904;
downlinkWindowUK5.start = 1269;
downlinkWindowUK5.end = 1279;

fact(nanosat.uvtrx.beacon.window.Available beaconWindow1);
fact(nanosat.uvtrx.beacon.window.Available beaconWindow2);
fact(nanosat.uvtrx.beacon.window.Available beaconWindow3);
fact(nanosat.uvtrx.beacon.window.Available beaconWindow4);
fact(nanosat.uvtrx.beacon.window.Available beaconWindow5);
fact(nanosat.uvtrx.beacon.window.Available beaconWindow6);
beaconWindow1.start = 0;
beaconWindow1.end = 1;
beaconWindow2.start = 15;
beaconWindow2.end = 700;
beaconWindow3.start = 714;
beaconWindow3.end = 796;
beaconWindow4.start = 810;
beaconWindow4.end = 893;
beaconWindow5.start = 905;
beaconWindow5.end = 1268;
beaconWindow6.start = 1280;
beaconWindow6.end = 1440;

fact(nanosat.funcube2.amateur.window.Available amateurWindow1);
fact(nanosat.funcube2.amateur.window.Available amateurWindow2);
fact(nanosat.funcube2.amateur.window.Available amateurWindow3);
fact(nanosat.funcube2.amateur.window.Available amateurWindow4);
fact(nanosat.funcube2.amateur.window.Available amateurWindow5);
fact(nanosat.funcube2.amateur.window.Available amateurWindow6);
fact(nanosat.funcube2.amateur.window.Available amateurWindow7);
fact(nanosat.funcube2.amateur.window.Available amateurWindow8);
fact(nanosat.funcube2.amateur.window.Available amateurWindow9);
fact(nanosat.funcube2.amateur.window.Available amateurWindow10);
fact(nanosat.funcube2.amateur.window.Available amateurWindow11);
fact(nanosat.funcube2.amateur.window.Available amateurWindow12);
fact(nanosat.funcube2.amateur.window.Available amateurWindow13);
fact(nanosat.funcube2.amateur.window.Available amateurWindow14);
amateurWindow1.start = 78;
amateurWindow1.end = 126;
amateurWindow2.start = 175;
amateurWindow2.end = 223;
amateurWindow3.start = 272;
amateurWindow3.end = 321;
amateurWindow4.start = 369;
amateurWindow4.end = 418;
amateurWindow5.start = 466;
amateurWindow5.end = 515;
amateurWindow6.start = 563;
amateurWindow6.end = 612;
amateurWindow7.start = 660;
amateurWindow7.end = 708;
amateurWindow8.start = 758;
amateurWindow8.end = 806;
amateurWindow9.start = 855;
amateurWindow9.end = 903;
amateurWindow10.start = 952;
amateurWindow10.end = 1000;
amateurWindow11.start = 1049;
amateurWindow11.end = 1097;
amateurWindow12.start = 1146;
amateurWindow12.end = 1195;
amateurWindow13.start = 1243;
amateurWindow13.end = 1292;
amateurWindow14.start = 1340;
amateurWindow14.end = 1389;

fact(nanosat.funcube2.education.window.Available educationWindow1);
fact(nanosat.funcube2.education.window.Available educationWindow2);
fact(nanosat.funcube2.education.window.Available educationWindow3);
fact(nanosat.funcube2.education.window.Available educationWindow4);
fact(nanosat.funcube2.education.window.Available educationWindow5);
fact(nanosat.funcube2.education.window.Available educationWindow6);
fact(nanosat.funcube2.education.window.Available educationWindow7);
fact(nanosat.funcube2.education.window.Available educationWindow8);
fact(nanosat.funcube2.education.window.Available educationWindow9);
fact(nanosat.funcube2.education.window.Available educationWindow10);
fact(nanosat.funcube2.education.window.Available educationWindow11);
fact(nanosat.funcube2.education.window.Available educationWindow12);
fact(nanosat.funcube2.education.window.Available educationWindow13);
fact(nanosat.funcube2.education.window.Available educationWindow14);
fact(nanosat.funcube2.education.window.Available educationWindow15);
educationWindow1.start = 30;
educationWindow1.end = 77;
educationWindow2.start = 127;
educationWindow2.end = 174;
educationWindow3.start = 224;
educationWindow3.end = 271;
educationWindow4.start = 322;
educationWindow4.end = 368;
educationWindow5.start = 419;
educationWindow5.end = 465;
educationWindow6.start = 516;
educationWindow6.end = 562;
educationWindow7.start = 613;
educationWindow7.end = 659;
educationWindow8.start = 709;
educationWindow8.end = 757;
educationWindow9.start = 807;
educationWindow9.end = 854;
educationWindow10.start = 904;
educationWindow10.end = 951;
educationWindow11.start = 1001;
educationWindow11.end = 1048;
educationWindow12.start = 1098;
educationWindow12.end = 1145;
educationWindow13.start = 1196;
educationWindow13.end = 1242;
educationWindow14.start = 1293;
educationWindow14.end = 1339;
educationWindow15.start = 1390;
educationWindow15.end = 1440;

// Charge the battery during hours of sunlight
fact(nanosat.panel.chargeBattery charge1);
fact(nanosat.panel.chargeBattery charge2);
fact(nanosat.panel.chargeBattery charge3);
fact(nanosat.panel.chargeBattery charge4);
fact(nanosat.panel.chargeBattery charge5);
fact(nanosat.panel.chargeBattery charge6);
fact(nanosat.panel.chargeBattery charge7);
fact(nanosat.panel.chargeBattery charge8);
fact(nanosat.panel.chargeBattery charge9);
fact(nanosat.panel.chargeBattery charge10);
fact(nanosat.panel.chargeBattery charge11);
fact(nanosat.panel.chargeBattery charge12);
fact(nanosat.panel.chargeBattery charge13);
fact(nanosat.panel.chargeBattery charge14);
fact(nanosat.panel.chargeBattery charge15);
leq(sunlightWindow1.start, charge1.start);
leq(charge1.end, sunlightWindow1.end);
leq(sunlightWindow2.start, charge2.start);
leq(charge2.end, sunlightWindow2.end);
leq(sunlightWindow3.start, charge3.start);
leq(charge3.end, sunlightWindow3.end);
leq(sunlightWindow4.start, charge4.start);
leq(charge4.end, sunlightWindow4.end);
leq(sunlightWindow5.start, charge5.start);
leq(charge5.end, sunlightWindow5.end);
leq(sunlightWindow6.start, charge6.start);
leq(charge6.end, sunlightWindow6.end);
leq(sunlightWindow7.start, charge7.start);
leq(charge7.end, sunlightWindow7.end);
leq(sunlightWindow8.start, charge8.start);
leq(charge8.end, sunlightWindow8.end);
leq(sunlightWindow9.start, charge9.start);
leq(charge9.end, sunlightWindow9.end);
leq(sunlightWindow10.start, charge10.start);
leq(charge10.end, sunlightWindow10.end);
leq(sunlightWindow11.start, charge11.start);
leq(charge11.end, sunlightWindow11.end);
leq(sunlightWindow12.start, charge12.start);
leq(charge12.end, sunlightWindow12.end);
leq(sunlightWindow13.start, charge13.start);
leq(charge13.end, sunlightWindow13.end);
leq(sunlightWindow14.start, charge14.start);
leq(charge14.end, sunlightWindow14.end);
leq(sunlightWindow15.start, charge15.start);
leq(charge15.end, sunlightWindow15.end);

// Downlink at all available opportunities - Cape Town
goal(nanosat.stx.downlinkData downlinkCapeTown1);
goal(nanosat.stx.downlinkData downlinkCapeTown2);
goal(nanosat.stx.downlinkData downlinkCapeTown3);
goal(nanosat.stx.downlinkData downlinkCapeTown4);
leq(downlinkWindowCapeTown1.start, downlinkCapeTown1.start);
leq(downlinkCapeTown1.end, downlinkWindowCapeTown1.end);
leq(downlinkWindowCapeTown2.start, downlinkCapeTown2.start);
leq(downlinkCapeTown2.end, downlinkWindowCapeTown2.end);
leq(downlinkWindowCapeTown3.start, downlinkCapeTown3.start);
leq(downlinkCapeTown3.end, downlinkWindowCapeTown3.end);
leq(downlinkWindowCapeTown4.start, downlinkCapeTown4.start);
leq(downlinkCapeTown4.end, downlinkWindowCapeTown4.end);

// Downlink at all available opportunities - UK
goal(nanosat.uvtrx.downlinkData downlinkUK1);
goal(nanosat.uvtrx.downlinkData downlinkUK2);
goal(nanosat.uvtrx.downlinkData downlinkUK3);
goal(nanosat.uvtrx.downlinkData downlinkUK4);
goal(nanosat.uvtrx.downlinkData downlinkUK5);
leq(downlinkWindowUK1.start, downlinkUK1.start);
leq(downlinkUK1.end, downlinkWindowUK1.end);
leq(downlinkWindowUK2.start, downlinkUK2.start);
leq(downlinkUK2.end, downlinkWindowUK2.end);
leq(downlinkWindowUK3.start, downlinkUK3.start);
leq(downlinkUK3.end, downlinkWindowUK3.end);
leq(downlinkWindowUK4.start, downlinkUK4.start);
leq(downlinkUK4.end, downlinkWindowUK4.end);
leq(downlinkWindowUK5.start, downlinkUK5.start);
leq(downlinkUK5.end, downlinkWindowUK5.end);

// Beacon should be active when not downlinking to the UK ground station
goal(nanosat.uvtrx.beaconActive beacon1);
goal(nanosat.uvtrx.beaconActive beacon2);
goal(nanosat.uvtrx.beaconActive beacon3);
goal(nanosat.uvtrx.beaconActive beacon4);
goal(nanosat.uvtrx.beaconActive beacon5);
goal(nanosat.uvtrx.beaconActive beacon6);
beacon1.start = beaconWindow1.start;
beacon2.start = beaconWindow2.start;
beacon3.start = beaconWindow3.start;
beacon4.start = beaconWindow4.start;
beacon5.start = beaconWindow5.start;
beacon6.start = beaconWindow6.start;

//FUNCUBE2 educational communications - start them whenever entering the appropriate window
goal(nanosat.funcube2.communicateEducation educationalComms1);
goal(nanosat.funcube2.communicateEducation educationalComms2);
goal(nanosat.funcube2.communicateEducation educationalComms3);
goal(nanosat.funcube2.communicateEducation educationalComms4);
goal(nanosat.funcube2.communicateEducation educationalComms5);
goal(nanosat.funcube2.communicateEducation educationalComms6);
goal(nanosat.funcube2.communicateEducation educationalComms7);
goal(nanosat.funcube2.communicateEducation educationalComms8);
goal(nanosat.funcube2.communicateEducation educationalComms9);
goal(nanosat.funcube2.communicateEducation educationalComms10);
goal(nanosat.funcube2.communicateEducation educationalComms11);
goal(nanosat.funcube2.communicateEducation educationalComms12);
goal(nanosat.funcube2.communicateEducation educationalComms13);
goal(nanosat.funcube2.communicateEducation educationalComms14);
goal(nanosat.funcube2.communicateEducation educationalComms15);
educationalComms1.start = educationWindow1.start;
educationalComms2.start = educationWindow2.start;
educationalComms3.start = educationWindow3.start;
educationalComms4.start = educationWindow4.start;
educationalComms5.start = educationWindow5.start;
educationalComms6.start = educationWindow6.start;
educationalComms7.start = educationWindow7.start;
educationalComms8.start = educationWindow8.start;
educationalComms9.start = educationWindow9.start;
educationalComms10.start = educationWindow10.start;
educationalComms11.start = educationWindow11.start;
educationalComms12.start = educationWindow12.start;
educationalComms13.start = educationWindow13.start;
educationalComms14.start = educationWindow14.start;
educationalComms15.start = educationWindow15.start;

//FUNCUBE2 amateur communications - start them whenever entering the appropriate window
goal(nanosat.funcube2.communicateAmateur amateurComms1);
goal(nanosat.funcube2.communicateAmateur amateurComms2);
goal(nanosat.funcube2.communicateAmateur amateurComms3);
goal(nanosat.funcube2.communicateAmateur amateurComms4);
goal(nanosat.funcube2.communicateAmateur amateurComms5);
goal(nanosat.funcube2.communicateAmateur amateurComms6);
goal(nanosat.funcube2.communicateAmateur amateurComms7);
goal(nanosat.funcube2.communicateAmateur amateurComms8);
goal(nanosat.funcube2.communicateAmateur amateurComms9);
goal(nanosat.funcube2.communicateAmateur amateurComms10);
goal(nanosat.funcube2.communicateAmateur amateurComms11);
goal(nanosat.funcube2.communicateAmateur amateurComms12);
goal(nanosat.funcube2.communicateAmateur amateurComms13);
goal(nanosat.funcube2.communicateAmateur amateurComms14);
amateurComms1.start = amateurWindow1.start;
amateurComms2.start = amateurWindow2.start;
amateurComms3.start = amateurWindow3.start;
amateurComms4.start = amateurWindow4.start;
amateurComms5.start = amateurWindow5.start;
amateurComms6.start = amateurWindow6.start;
amateurComms7.start = amateurWindow7.start;
amateurComms8.start = amateurWindow8.start;
amateurComms9.start = amateurWindow9.start;
amateurComms10.start = amateurWindow10.start;
amateurComms11.start = amateurWindow11.start;
amateurComms12.start = amateurWindow12.start;
amateurComms13.start = amateurWindow13.start;
amateurComms14.start = amateurWindow14.start;

// EXPERIMENTAL PAYLOADS

// If C3D is on, consume power
fact(nanosat.c3d.consumePowerWhileOn c3dUseBattery);
leq(0, c3dUseBattery.start);
leq(c3dUseBattery.end, 1500);

// Take a photo of the UK ground station once
goal(nanosat.c3d.takePhoto takePhoto);
leq(0, takePhoto.start);
leq(takePhoto.end, 1500);

// Measure radiation once
goal(nanosat.c3d.measureRadiation measureRadiation);
leq(0, measureRadiation.start);
leq(measureRadiation.end, 1500);

// If TOPCAT is on, consume power
fact(nanosat.topcat.consumePowerWhileOn topcatUseBattery);
leq(0, topcatUseBattery.start);
leq(topcatUseBattery.end, 1500);

// Perform TOPCAT experiment once
goal(nanosat.topcat.runExperiment topcatExperiment);
leq(0, topcatExperiment.start);
leq(topcatExperiment.end, 1500);

// If MIC is on, consume power
fact(nanosat.mic.consumePowerWhileOn micUseBattery);
leq(0, micUseBattery.start);
leq(micUseBattery.end, 1500);

// Perform MIC experiment once
goal(nanosat.mic.runExperiment micExperiment);
leq(0, micExperiment.start);
leq(micExperiment.end, 1500);

// Run JANUS in high power mode (in the SAA) once
goal(nanosat.janus.runExperimentHighPower highPowerJanus);
leq(0, highPowerJanus.start);
leq(highPowerJanus.end, 1500);

// Run JANUS in lower power mode once
goal(nanosat.janus.runExperimentLowPower lowPowerJanus);
leq(0, lowPowerJanus.start);
leq(lowPowerJanus.end, 1500);

// These payloads are always on and consuming power: EPS, SWB, BAT, OBC, ADCS
fact(nanosat.constantpayloads.consumePower constantPayloadsRunning);
constantPayloadsRunning.start = 0;