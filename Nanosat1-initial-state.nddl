#include "Nanosat1-model.nddl"

// Create a planner configuration instance in PLASMA.

// Setting up the nanosatellite with battery
Battery battery = new Battery(30000, 0, 30000);
Memory memory = new Memory(0, 0, 4194304);
Nanosatellite nanosat = new Nanosatellite(battery, memory);

// Close the the PLASMA Database - no more objects can be created.
close();

// Establish the initial conditions
fact(nanosat.c3d.state.Off cOff);
cOff.start = 0;

// Establish the windows of availability
fact(nanosat.timeHorizon.Available horizon);
horizon.start = 0;
horizon.end = 1500;

fact(nanosat.sunlight.Available sunlightWindow1);
fact(nanosat.sunlight.Available sunlightWindow2);
fact(nanosat.sunlight.Available sunlightWindow3);
fact(nanosat.sunlight.Available sunlightWindow4);
fact(nanosat.sunlight.Available sunlightWindow5);
fact(nanosat.sunlight.Available sunlightWindow6);
fact(nanosat.sunlight.Available sunlightWindow7);
fact(nanosat.sunlight.Available sunlightWindow8);
fact(nanosat.sunlight.Available sunlightWindow9);
fact(nanosat.sunlight.Available sunlightWindow10);
fact(nanosat.sunlight.Available sunlightWindow11);
fact(nanosat.sunlight.Available sunlightWindow12);
fact(nanosat.sunlight.Available sunlightWindow13);
fact(nanosat.sunlight.Available sunlightWindow14);
fact(nanosat.sunlight.Available sunlightWindow15);
sunlightWindow1.start = 30;
sunlightWindow1.end = 77;
sunlightWindow2.start = 127;
sunlightWindow2.end = 174;
sunlightWindow3.start = 224;
sunlightWindow3.end = 271;
sunlightWindow4.start = 322;
sunlightWindow4.end = 368;
sunlightWindow5.start = 419;
sunlightWindow5.end = 465;
sunlightWindow6.start = 516;
sunlightWindow6.end = 562;
sunlightWindow7.start = 613;
sunlightWindow7.end = 659;
sunlightWindow8.start = 709;
sunlightWindow8.end = 757;
sunlightWindow9.start = 807;
sunlightWindow9.end = 854;
sunlightWindow10.start = 904;
sunlightWindow10.end = 951;
sunlightWindow11.start = 1001;
sunlightWindow11.end = 1048;
sunlightWindow12.start = 1098;
sunlightWindow12.end = 1145;
sunlightWindow13.start = 1196;
sunlightWindow13.end = 1242;
sunlightWindow14.start = 1293;
sunlightWindow14.end = 1339;
sunlightWindow15.start = 1390;
sunlightWindow15.end = 1440;

fact(nanosat.localSunlight.Available localDaylight);
localDaylight.start = 286;
localDaylight.end = 1309;

fact(nanosat.saa.Available SAA1);
fact(nanosat.saa.Available SAA2);
fact(nanosat.saa.Available SAA3);
fact(nanosat.saa.Available SAA4);
fact(nanosat.saa.Available SAA5);
fact(nanosat.saa.Available SAA6);
fact(nanosat.saa.Available SAA7);
SAA1.start = 77;
SAA1.end = 87;
SAA2.start = 173;
SAA2.end = 183;
SAA3.start = 632;
SAA3.end = 638;
SAA4.start = 728;
SAA4.end = 736;
SAA5.start = 823;
SAA5.end = 834;
SAA6.start = 923;
SAA6.end = 926;
SAA7.start = 1433;
SAA7.end = 1444;

fact(nanosat.stx.window.Available downlinkWindowCapeTown1);
fact(nanosat.stx.window.Available downlinkWindowCapeTown2);
fact(nanosat.stx.window.Available downlinkWindowCapeTown3);
fact(nanosat.stx.window.Available downlinkWindowCapeTown4);
downlinkWindowCapeTown1.start = 533;
downlinkWindowCapeTown1.end = 544;
downlinkWindowCapeTown2.start = 627;
downlinkWindowCapeTown2.end = 640;
downlinkWindowCapeTown3.start = 1338;
downlinkWindowCapeTown3.end = 1351;
downlinkWindowCapeTown4.start = 1434;
downlinkWindowCapeTown4.end = 1446;

// Charge the battery during hours of sunlight
fact(nanosat.panel.chargeBattery charge1);
fact(nanosat.panel.chargeBattery charge2);
fact(nanosat.panel.chargeBattery charge3);
fact(nanosat.panel.chargeBattery charge4);
fact(nanosat.panel.chargeBattery charge5);
fact(nanosat.panel.chargeBattery charge6);
fact(nanosat.panel.chargeBattery charge7);
fact(nanosat.panel.chargeBattery charge8);
fact(nanosat.panel.chargeBattery charge9);
fact(nanosat.panel.chargeBattery charge10);
fact(nanosat.panel.chargeBattery charge11);
fact(nanosat.panel.chargeBattery charge12);
fact(nanosat.panel.chargeBattery charge13);
fact(nanosat.panel.chargeBattery charge14);
fact(nanosat.panel.chargeBattery charge15);
leq(sunlightWindow1.start, charge1.start);
leq(charge1.end, sunlightWindow1.end);
leq(sunlightWindow2.start, charge2.start);
leq(charge2.end, sunlightWindow2.end);
leq(sunlightWindow3.start, charge3.start);
leq(charge3.end, sunlightWindow3.end);
leq(sunlightWindow4.start, charge4.start);
leq(charge4.end, sunlightWindow4.end);
leq(sunlightWindow5.start, charge5.start);
leq(charge5.end, sunlightWindow5.end);
leq(sunlightWindow6.start, charge6.start);
leq(charge6.end, sunlightWindow6.end);
leq(sunlightWindow7.start, charge7.start);
leq(charge7.end, sunlightWindow7.end);
leq(sunlightWindow8.start, charge8.start);
leq(charge8.end, sunlightWindow8.end);
leq(sunlightWindow9.start, charge9.start);
leq(charge9.end, sunlightWindow9.end);
leq(sunlightWindow10.start, charge10.start);
leq(charge10.end, sunlightWindow10.end);
leq(sunlightWindow11.start, charge11.start);
leq(charge11.end, sunlightWindow11.end);
leq(sunlightWindow12.start, charge12.start);
leq(charge12.end, sunlightWindow12.end);
leq(sunlightWindow13.start, charge13.start);
leq(charge13.end, sunlightWindow13.end);
leq(sunlightWindow14.start, charge14.start);
leq(charge14.end, sunlightWindow14.end);
leq(sunlightWindow15.start, charge15.start);
leq(charge15.end, sunlightWindow15.end);

// Downlink at all available opportunities - Cape Town
goal(nanosat.stx.downlinkData downlinkCapeTown1);
goal(nanosat.stx.downlinkData downlinkCapeTown2);
goal(nanosat.stx.downlinkData downlinkCapeTown3);
goal(nanosat.stx.downlinkData downlinkCapeTown4);
leq(downlinkWindowCapeTown1.start, downlinkCapeTown1.start);
leq(downlinkCapeTown1.end, downlinkWindowCapeTown1.end);
leq(downlinkWindowCapeTown2.start, downlinkCapeTown2.start);
leq(downlinkCapeTown2.end, downlinkWindowCapeTown2.end);
leq(downlinkWindowCapeTown3.start, downlinkCapeTown3.start);
leq(downlinkCapeTown3.end, downlinkWindowCapeTown3.end);
leq(downlinkWindowCapeTown4.start, downlinkCapeTown4.start);
leq(downlinkCapeTown4.end, downlinkWindowCapeTown4.end);

// EXPERIMENTAL PAYLOADS

// If C3D is on, consume power
fact(nanosat.c3d.consumePowerWhileOn c3dUseBattery);
leq(0, c3dUseBattery.start);
leq(c3dUseBattery.end, 1500);

// Take a photo of the UK ground station once
goal(nanosat.c3d.takePhoto takePhoto);
leq(0, takePhoto.start);
leq(takePhoto.end, 1500);

// Measure radiation once
goal(nanosat.c3d.measureRadiation measureRadiation);
leq(0, measureRadiation.start);
leq(measureRadiation.end, 1500);